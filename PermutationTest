import java.util.Arrays;

public class PermutationTest {
	private static String[] str = { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "g",
			"h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z" };
	private static String tempstr = "";

	public static String[] cstrArr() {
		tempstr = "";
		int len = (int) (Math.random() * 10 + 1);
		for (int i = 0; i < len; i++) {
			String temp = str[(int) (Math.random() * (str.length))];
			if (tempstr.indexOf(temp + ",") > -1) {
				continue;
			}
			tempstr += temp + ",";
		}
		if (tempstr.length() < 1)
			tempstr = str[(int) (Math.random() * (str.length))];
		return tempstr.split(",");
	}

	public static String[][] cstrArrs(int i) {
		String[][] strArrs = new String[i][];
		for (int j = 0; j < i; j++) {
			strArrs[j] = cstrArr();
		}
		// strArrs=new String[][]{{"1","2"},{"3","9","5","6"},{"a","b"}};
		return strArrs;
	}

	public static void main(String[] args) {
		String[][] strArrs = cstrArrs(9);
		int len = strArrs.length;
		int[] intArr = new int[len * 2];
		int count = 1;
		for (int i = 0; i < len; i++) {
			intArr[i] = strArrs[i].length;
			count = count * intArr[i];
			System.out.println("数组:" + Arrays.toString(strArrs[i]) + " ");
		}

		System.out.println("组合排列为:");
		int c = count;
		while (count > 0) {
			for (int m = 0; m < len; m++) {
				System.out.print(strArrs[m][intArr[m + len]] + " ");
			}
			for (int k = len - 1; k >= 0; k--) {
				if (intArr[len + k] < intArr[k] - 1) {
					intArr[len + k]++;
					break;
				} else {
					intArr[len + k] = 0;
				}
			}
			System.out.println();
			count--;
		}
	}
}
